{"version":3,"sources":["global/theme.js","global/type.js","global/utils.js","global/index.js","global/reset.js","components/blocks/Container/index.js","components/blocks/Divider/index.js","components/blocks/SmoothScroll/index.js","components/blocks/Youtube/index.js","components/elements/AspectRatio/index.js","components/elements/Image/index.js","components/sections/Hero/Model/index.js","components/sections/Hero/index.js","components/sections/Intro/index.js","pages/Landing/index.js","pages/Landing/data.js","App.js","index.js"],"names":["breakPoints","fontSizes","Array","from","length","baseValue","x","i","spacing","sizing","bp","fs","lh","sp","color","black","green","grey","orange","white","easing","easeIn","fontFamily","kanit","fontSize","h1","h2","h3","h4","h5","h6","label","p","fontStyle","inherit","italic","normal","oblique","fontWeight","bold","extraBold","extraLight","light","medium","regular","thin","grid","columnWidth","gutterWidth","maxWidth","outerSpacing","sectionSpacing","totalColumns","letterSpacing","lineHeight","size","lg","md","sm","xl","xs","xxl","xxs","xxxl","xxxs","textTransform","theme","H1","styled","inverted","P","secondary","sizes","isPx","value","toString","indexOf","toUnitless","Number","stripUnit","media","down","Object","keys","reduce","accumulator","emSize","css","up","getColumnSpanSize","columns","columnTotal","gutterCount","Math","round","getPercentValue","container","GlobalStyles","createGlobalStyle","Wrapper","div","unContain","Container","children","className","teal","iframe","PropTypes","bool","string","max","align","width","height","Img","img","Image","isRequired","alt","src","Model","mouse","props","useState","model","setModel","useThree","camera","viewport","aspect","useEffect","GLTFLoader","load","useFrame","position","z","lerp","scene","rotation","y","current","object","slideIn","keyframes","Title","Hero","useRef","onMouseMove","useCallback","clientX","clientY","window","innerWidth","innerHeight","intensity","fallback","Content","Copy","offset","ImageWrapper","totalWidth","setColumnSpanSize","Intro","copy","image","title","setRefs","compRef","contentRef","copyRef","imageRef","document","addEventListener","ref","offsetHeight","scroll","offsetTop","scrollY","percentage","style","transform","opacity","cssText","as","intro","Landing","App","basename","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1c399d15.chunk.js","sourcesContent":["// The base value that every setting is calculated from\nconst baseValue = 8;\n\n// grid settings\nconst columns = 12;\nconst columnWidth = baseValue * 10; // 80\nconst gutterWidth = baseValue * 3; // 24\nconst gridWidth = columnWidth * columns + gutterWidth * (columns - 1); // 1224\n\n// default breakpoints, based off of common devices sizes\nconst breakPoints = [320, 375, 480, 667, 768, 960, 1024, 1440, 1950];\n\n// 8, 16, 24, 32, 40, 48, 56, 64, 72\nconst fontSizes = Array.from(\n  { length: baseValue + 1 },\n  (x, i) => (i + 1) * baseValue\n);\n\n// 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128\nconst spacing = Array.from(\n  { length: baseValue * 2 },\n  (x, i) => (i + 1) * baseValue\n);\n\n// setting up our size shorthands\nconst sizing = Array.from({ length: baseValue + 1 }, (x, i) => ({\n  bp: breakPoints[i],\n  fs: fontSizes[i],\n  lh: fontSizes[i] * 1.5,\n  sp: spacing[i]\n}));\n\nexport default {\n  color: {\n    black: '#000000',\n    green: '#54ff05',\n    grey: '#3C3C3C',\n    orange: '#F7821B',\n    white: '#FFFFFF'\n  },\n  easing: {\n    easeIn: 'cubic-bezier(0.08, 0.02, 0.06, 1)'\n  },\n  fontFamily: {\n    kanit: 'Kanit, sans-serif'\n  },\n  fontSize: {\n    h1: '64px',\n    h2: '42px',\n    h3: '21px',\n    h4: '16px',\n    h5: '14px',\n    h6: '12px',\n    label: '16px',\n    p: '18px'\n  },\n  fontStyle: {\n    inherit: 'inherit',\n    italic: 'italic',\n    normal: 'normal',\n    oblique: 'oblique'\n  },\n  fontWeight: {\n    black: '900',\n    bold: '700',\n    extraBold: '800',\n    extraLight: '200',\n    inherit: 'inherit',\n    light: '300',\n    medium: '500',\n    regular: '400',\n    thin: '100'\n  },\n  grid: {\n    columnWidth: columnWidth, // 80\n    gutterWidth: gutterWidth, // 24\n    maxWidth: gridWidth, // 1224\n    outerSpacing: baseValue * 3, // 24\n    sectionSpacing: baseValue * 15, // 120\n    totalColumns: columns\n  },\n  letterSpacing: {\n    h1: '0',\n    h2: '0',\n    h3: '0',\n    h4: '0',\n    h5: '0',\n    h6: '4.5px',\n    label: '2.0px',\n    p: '0'\n  },\n  lineHeight: {\n    h1: '64px',\n    h2: '41px',\n    h3: '32px',\n    h4: '16px',\n    h5: '14px',\n    label: '16px',\n    p: '32px'\n  },\n  size: {\n    lg: sizing[5],\n    md: sizing[4],\n    sm: sizing[3],\n    xl: sizing[6],\n    xs: sizing[2],\n    xxl: sizing[7],\n    xxs: sizing[1],\n    xxxl: sizing[8],\n    xxxs: sizing[0]\n  },\n  textTransform: {\n    h1: 'none',\n    h2: 'none',\n    h3: 'none',\n    h4: 'none',\n    h5: 'uppercase',\n    h6: 'uppercase',\n    label: 'uppercase',\n    p: 'none'\n  }\n};\n","import styled from 'styled-components';\nimport theme from './theme';\n\nconst {\n  color,\n  fontFamily,\n  fontSize,\n  fontStyle,\n  fontWeight,\n  letterSpacing,\n  lineHeight,\n  textTransform\n} = theme;\n\nexport const H1 = styled.h1`\n  color: ${p => (p.inverted ? color.white : color.black)};\n  font-family: ${fontFamily.kanit};\n  font-size: ${fontSize.h1};\n  font-style: ${fontStyle.normal};\n  font-weight: ${fontWeight.black};\n  letter-spacing: ${letterSpacing.h1};\n  line-height: ${lineHeight.h1};\n  text-transform: ${textTransform.h1};\n`;\n\n// prettier-ignore\nexport const H2 = styled.h2`\n  color: ${p => (p.inverted ? color.white : color.orange)};\n  font-family: ${fontFamily.kanit};\n  font-size: ${fontSize.h2};\n  font-style: ${fontStyle.normal};\n  font-weight: ${fontWeight.black};\n  letter-spacing: ${letterSpacing.h2};\n  line-height: ${lineHeight.h2};\n  text-transform: ${textTransform.h2};\n\n  ${p => p.secondary && `\n    color: ${color.grey};\n    line-height: 56px;\n  `}\n`;\n\nexport const H3 = styled.h3`\n  color: ${p => (p.inverted ? color.white : color.orange)};\n  font-family: ${fontFamily.kanit};\n  font-size: ${fontSize.h3};\n  font-style: ${fontStyle.normal};\n  font-weight: ${fontWeight.black};\n  letter-spacing: ${letterSpacing.h3};\n  line-height: ${lineHeight.h3};\n  text-transform: ${textTransform.h3};\n`;\n\nexport const H4 = styled.h4`\n  color: ${p => (p.inverted ? color.white : color.grey)};\n  font-family: ${fontFamily.kanit};\n  font-size: ${fontSize.h4};\n  font-style: ${fontStyle.normal};\n  font-weight: ${fontWeight.regular};\n  letter-spacing: ${letterSpacing.h4};\n  line-height: ${lineHeight.h4};\n  text-transform: ${textTransform.h4};\n`;\n\nexport const H5 = styled.h5`\n  color: ${p => (p.inverted ? color.white : color.grey)};\n  font-family: ${fontFamily.kanit};\n  font-size: ${fontSize.h5};\n  font-style: ${fontStyle.normal};\n  font-weight: ${fontWeight.regular};\n  letter-spacing: ${letterSpacing.h5};\n  line-height: ${lineHeight.h5};\n  text-transform: ${textTransform.h5};\n`;\n\nexport const H6 = styled.h6`\n  color: ${p => (p.inverted ? color.white : color.grey)};\n  font-family: ${fontFamily.kanit};\n  font-size: ${fontSize.h6};\n  font-style: ${fontStyle.normal};\n  font-weight: ${fontWeight.regular};\n  letter-spacing: ${letterSpacing.h6};\n  line-height: ${lineHeight.h6};\n  text-transform: ${textTransform.h6};\n`;\n\n// prettier-ignore\nexport const P = styled.p`\n  color: ${p => (p.inverted ? color.white : color.grey)};\n  font-family: ${fontFamily.kanit};\n  font-size: ${fontSize.p};\n  font-style: ${fontStyle.normal};\n  font-weight: ${fontWeight.regular};\n  letter-spacing: ${letterSpacing.p};\n  line-height: ${lineHeight.p};\n  text-transform: ${textTransform.p};\n\n  ${p => p.secondary && `\n    font-size: 32px;\n    line-height: 56px;\n  `}\n`;\n","import { css } from 'styled-components';\nimport { rgba, stripUnit } from 'polished';\nimport theme from './theme';\n\nconst { grid } = theme;\nconst { columnWidth, gutterWidth, maxWidth } = grid;\n\nexport const sizes = {\n  down: {\n    lg: 959,\n    md: 767,\n    sm: 666,\n    xl: 1023,\n    xs: 479,\n    xxl: 1439,\n    xxs: 375,\n    xxxl: 1949\n  },\n  up: {\n    lg: 960,\n    md: 768,\n    sm: 667,\n    xl: 1024,\n    xs: 480,\n    xxl: 1440,\n    xxs: 376,\n    xxxl: 1950\n  }\n};\n\nexport const isPx = value => value.toString().indexOf('px') > -1;\n\nexport const toUnitless = value => Number(stripUnit(value));\n\n// use em in breakpoints to work properly cross-browser and support users\n// changing their browsers font-size: https://zellwk.com/blog/media-query-units\n// prettier-ignore\nexport const media = {\n  down: Object.keys(sizes.down).reduce((accumulator, label) => {\n    const emSize = sizes.down[label] / 16;\n    accumulator[label] = (...args) => css`\n      @media (max-width: ${emSize}em) {\n        ${css(...args)}\n      }\n    `;\n    return accumulator;\n  }, {}),\n  up: Object.keys(sizes.up).reduce((accumulator, label) => {\n    const emSize = sizes.up[label] / 16;\n    accumulator[label] = (...args) => css`\n      @media (min-width: ${emSize}em) {\n        ${css(...args)}\n      }\n    `;\n    return accumulator;\n  }, {})\n};\n\n/**\n * Based on the number of columns you want, this will determine the pixel size it takes up including the gutters.\n */\nexport const getColumnSpanSize = columns => {\n  const columnTotal = columns * columnWidth;\n  const gutterCount = Math.round(columns) - 1;\n  // allowing for 1 or a fraction of a 1 column\n  const gutterTotal = gutterCount >= 1 ? gutterCount * gutterWidth : 0;\n  return columnTotal + gutterTotal;\n};\n\n/**\n * Returns a percentage based value for setting horizontal based css rules.\n */\nexport const getPercentValue = (size, container = maxWidth) => {\n  const value = isPx(size) ? toUnitless(size) : size;\n  return `${(value / container) * 100}%`;\n};\n\n/**\n * Utilizes my getColumnSpanSize function with my getPercentValue function to return a combined value of the amount of columns you want to span across.\n */\nexport const setColumnSpanSize = (columns, container = maxWidth) => {\n  const totalWidth = getColumnSpanSize(columns);\n  return getPercentValue(totalWidth, container);\n};\n\nexport const parseContent = (content, max) => ({\n  __html: max ? truncateWithEllipses(content, max) : content\n});\n\n/**\n * Trims the text based off of the number you pass to it and adds an ellipses\n */\nexport const truncateWithEllipses = (text, max) =>\n  text.substr(0, max - 1) + (text.length > max ? '&hellip;' : '');\n\nexport const shadeOf = (color, opacity) => rgba(color, opacity);\n\nexport const maintainRatio = (width, height) => `\n  position: relative;\n\n  &:before {\n    display: block;\n    content: '';\n    width: 100%;\n    padding-top: ${(height / width) * 100}%;\n  }\n\n  > * {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 100%;\n    width: 100%;\n    z-index: 1;\n\n    > * {\n      width: 100%;\n      height: 100%;\n    }\n  }\n`;\n","import { createGlobalStyle } from 'styled-components';\nimport resetCSS from './reset';\n\nexport { default as theme } from './theme';\nexport * from './type';\nexport * from './utils';\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    overflow-x: hidden;\n\n    @import url('https://fonts.googleapis.com/css?family=Kanit:400,900&display=swap');\n    h1, h2, h3, h4, h5, h6, p, a {\n      font-family: 'Kanit', sans-serif;\n    }\n  }\n  #root,\n  body,\n  html,\n  canvas {\n    height: 100%;\n    width: 100%;\n  }\n  ${resetCSS}\n`;\n","export default `\n  *,\n  *::after,\n  *::before {\n    -webkit-tap-highlight-color: transparent;\n    box-sizing: inherit;\n    border: 0;\n    margin: 0;\n    outline: 0;\n    padding: 0;\n    font-size: 100%;\n    text-size-adjust: 100%;\n    vertical-align: baseline;\n  }\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  time,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  section,\n  main {\n    display: block;\n  }\n  blockquote,\n  q {\n    quotes: none;\n  }\n  blockquote::before,\n  blockquote::after,\n  q::before,\n  q::after {\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  html,\n  body {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    text-rendering: optimizelegibility;\n    font-feature-settings: 'liga', 'kern';\n    background: none;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n  }\n  html {\n    box-sizing: border-box;\n  }\n  body {\n    font: inherit;\n    line-height: 1;\n    letter-spacing: 0;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  li {\n    font: inherit;\n    letter-spacing: inherit;\n    line-height: inherit;\n    color: inherit;\n  }\n  sup,\n  sub {\n    position: static !important;\n    margin: 0;\n    padding: 0;\n    font: inherit !important;\n    color: inherit;\n    line-height: inherit !important;\n    letter-spacing: inherit;\n    text-transform: none;\n    top: auto !important;\n    left: auto;\n    right: auto;\n    bottom: auto;\n    vertical-align: unset !important;\n  }\n  a {\n    text-decoration: none;\n  }\n  ul,\n  ol,\n  li {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n  label {\n    cursor: default;\n  }\n  input,\n  select,\n  button,\n  textarea {\n    appearance: none;\n    background: none;\n    box-shadow: none;\n    border-radius: 0;\n    border: 0;\n    outline: 0;\n    padding: 0;\n    margin: 0;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\n// prettier-ignore\nconst Wrapper = styled.div`\n  width: 100%;\n  margin: 0 auto;\n\n  ${p => !p.unContain && `\n    max-width: 1264px;\n    padding: 0 20px;\n  `}\n`;\n\nconst Container = ({ children, className, unContain }) => (\n  <Wrapper className={className} unContain={unContain}>\n    {children}\n  </Wrapper>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  unContain: PropTypes.bool\n};\n\nexport default Container;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { theme } from '../../../global';\n\nconst { color } = theme;\n\nconst Wrapper = styled.div`\n  background-color: ${color.teal};\n  height: 485px;\n  width: 100%;\n`;\n\nconst Divider = () => <Wrapper />;\n\nexport default Divider;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport gsap from 'gsap';\nimport { media } from '../../../global';\n\nconst Container = styled.div`\n  backface-visibility: hidden;\n  overflow: hidden;\n  position: absolute;\n  transform-style: preserve-3d;\n  width: 100%;\n  z-index: 10;\n`;\n\nconst Wrapper = styled.div`\n  background: black;\n  bottom: 0;\n  height: 100%;\n  left: 0;\n  overflow: hidden;\n  position: fixed;\n  right: 0;\n  top: 0;\n  transform-origin: right bottom;\n  width: 100%;\n\n  ${media.down.lg`\n    overflow-y: auto;\n    -webkit-overflow-scrolling: touch;\n  `}\n`;\n\nconst SmoothScroll = ({ children }) => {\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    const html = document.documentElement;\n    const body = document.body;\n\n    if (containerRef.current) {\n      const scroller = {\n        ease: 0.05, // <= scroll speed\n        endY: 0,\n        resizeRequest: 1,\n        scrollRequest: 0,\n        target: containerRef.current,\n        y: 0\n      };\n\n      let requestId = null;\n\n      gsap.set(scroller.target, {\n        force3D: true,\n        rotation: 0.01\n      });\n\n      const onLoad = () => {\n        updateScroller();\n        window.focus();\n        window.addEventListener('resize', onResize);\n        document.addEventListener('scroll', onScroll);\n      };\n\n      const updateScroller = () => {\n        const resized = scroller.resizeRequest > 0;\n\n        if (resized) {\n          const height = scroller.target.clientHeight;\n          body.style.height = height + 'px';\n          scroller.resizeRequest = 0;\n        }\n\n        const scrollY =\n          window.pageYOffset || html.scrollTop || body.scrollTop || 0;\n\n        scroller.endY = scrollY;\n        scroller.y += (scrollY - scroller.y) * scroller.ease;\n\n        if (Math.abs(scrollY - scroller.y) < 0.05 || resized) {\n          scroller.y = scrollY;\n          scroller.scrollRequest = 0;\n        }\n\n        gsap.set(scroller.target, {\n          y: -scroller.y\n        });\n\n        requestId =\n          scroller.scrollRequest > 0\n            ? requestAnimationFrame(updateScroller)\n            : null;\n      };\n\n      const onScroll = () => {\n        scroller.scrollRequest++;\n        if (!requestId) {\n          requestId = requestAnimationFrame(updateScroller);\n        }\n      };\n\n      const onResize = () => {\n        scroller.resizeRequest++;\n        if (!requestId) {\n          requestId = requestAnimationFrame(updateScroller);\n        }\n      };\n\n      window.addEventListener('load', onLoad);\n    }\n  }, []);\n\n  return (\n    <Wrapper>\n      <Container ref={containerRef}>{children}</Container>\n    </Wrapper>\n  );\n};\n\nSmoothScroll.propTypes = {\n  children: PropTypes.node\n};\n\nexport default SmoothScroll;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { getEmbedLink } from './utils';\n\nconst VideoWrapper = styled.iframe`\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  position: absolute;\n`;\n\nconst Wrapper = styled.div`\n  overflow: hidden;\n  padding-bottom: 56.25%;\n  position: relative;\n  height: 0;\n  width: 100%;\n`;\n\nconst Youtube = ({ autoplay, className, url }) => (\n  <Wrapper className={className}>\n    <VideoWrapper\n      src={getEmbedLink(autoplay, url)}\n      frameBorder=\"0\"\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen\n      title=\"Youtube\"\n    />\n  </Wrapper>\n);\n\nexport const YoutubeType = {\n  autoplay: PropTypes.bool,\n  url: PropTypes.string\n};\n\nYoutube.propTypes = {\n  ...YoutubeType,\n  className: PropTypes.string\n};\n\nexport default Youtube;\n","import styled, { css } from 'styled-components';\nimport { maintainRatio } from '../../../global';\n\n// prettier-ignore\nconst AspectRatio = styled.div`\n  ${p => p.max && css`\n    max-width: ${p.max}px;\n    margin: 0 auto;\n    width: 100%;\n\n    ${p.align === 'left' && `\n      margin-left: 0;\n    `}\n\n    ${p.align === 'right' && `\n      margin-right: 0;\n    `}\n  `}\n\n  ${p => maintainRatio(p.width, p.height)}\n`;\n\nexport default AspectRatio;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Img = styled.img`\n  height: auto;\n  width: 100%;\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nconst Image = ({ alt, className, src }) => (\n  <Wrapper className={className}>\n    <Img alt={alt} src={src} />\n  </Wrapper>\n);\n\nexport const ImageType = {\n  alt: PropTypes.string,\n  src: PropTypes.string.isRequired\n};\n\nImage.propTypes = {\n  ...ImageType,\n  className: PropTypes.string\n};\n\nexport default Image;\n","import React, { useEffect, useState } from 'react';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport lerp from 'lerp';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n\nconst Model = ({ mouse, ...props }) => {\n  const [model, setModel] = useState();\n  const { camera, size, viewport } = useThree();\n  const aspect = size.width / viewport.width;\n\n  useEffect(() => {\n    new GLTFLoader().load('/obj/hero/scene.gltf', setModel);\n  }, []);\n\n  useFrame(() => {\n    if (camera && camera.position.z > 15) {\n      camera.position.z = lerp(camera.position.z, 15, 0.03);\n      if (model) {\n        model.scene.rotation.y = lerp(model.scene.rotation.y, -2.5, 0.03);\n      }\n    }\n    if (camera.position.z < 15.5) {\n      camera.rotation.y = lerp(\n        camera.rotation.y,\n        0 + mouse.current[0] / aspect / 100,\n        0.005\n      );\n\n      camera.rotation.x = lerp(\n        camera.rotation.x,\n        0 + mouse.current[1] / aspect / 100,\n        0.005\n      );\n    }\n  });\n\n  return model ? <primitive {...props} object={model.scene} /> : null;\n};\n\nexport default Model;\n","import React, { Suspense, useCallback, useRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Canvas } from 'react-three-fiber';\nimport { H1 } from '../../../global';\nimport Model from './Model';\n\nconst slideIn = keyframes`\n  0% { opacity: 0; }\n  100% { opacity: 1; }\n`;\n\nconst Title = styled(H1)`\n  animation: ${slideIn} 3000ms 1 forwards;\n  animation-delay: 4s;\n  color: rgba(255, 255, 255, 0.6);\n  left: 0;\n  letter-spacing: 2vw;\n  opacity: 0;\n  position: absolute;\n  text-align: center;\n  text-transform: lowercase;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 100%;\n`;\n\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  margin-bottom: 200px;\n  position: relative;\n  width: 100%;\n\n  &::after {\n    background: linear-gradient(transparent, black);\n    bottom: 0;\n    content: '';\n    height: 200px;\n    left: 0;\n    position: absolute;\n    right: 0;\n  }\n`;\n\nconst Hero = () => {\n  const mouse = useRef([0, 0]);\n  const onMouseMove = useCallback(\n    ({ clientX: x, clientY: y }) =>\n      (mouse.current = [x - window.innerWidth / 2, y - window.innerHeight / 2]),\n    []\n  );\n\n  return (\n    <Wrapper>\n      <Title>Josh Kincheloe</Title>\n      <Canvas camera={{ position: [0, 0, 100] }} onMouseMove={onMouseMove}>\n        <ambientLight intensity={0.1} />\n        {/* <fog attach=\"fog\" args={['rgba(84, 255, 5, 0.1)', 5, 5]} /> */}\n        <Suspense fallback={null}>\n          <Model mouse={mouse} position={[0, -7, 0]} rotation={[0.5, -3, 0]} />\n        </Suspense>\n      </Canvas>\n    </Wrapper>\n  );\n};\n\nexport default Hero;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  getColumnSpanSize,\n  H1,\n  P,\n  setColumnSpanSize,\n  theme\n} from '../../../global';\nimport { Container } from '../../blocks';\nimport { Image, ImageType } from '../../elements';\n\nconst { color, easing } = theme;\n\nconst offset = 30;\n\nconst Content = styled.div`\n  left: 0;\n  max-width: ${getColumnSpanSize(6)}px;\n  position: absolute;\n  top: 140px;\n  transform: translateX(-${offset}%);\n  width: 100%;\n  z-index: 1;\n`;\n\nconst Copy = styled(P)`\n  color: ${color.green};\n  font-weight: bold;\n  opacity: 0;\n  padding-left: 80px;\n  transform: translateY(${offset * 2}%);\n  transition: all 2000ms ${easing.easeIn};\n`;\n\n// prettier-ignore\nconst ImageWrapper = styled.div`\n  /* filter: blur(4px); */\n  max-width: ${setColumnSpanSize(9)};\n`;\n\nconst Title = styled(H1)`\n  color: ${color.green};\n  font-size: 100px;\n  margin-bottom: 100px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding: 80px 0;\n  position: relative;\n`;\n\nconst Intro = ({ copy, image, setRefs, title }) => {\n  const compRef = useRef(null);\n  const contentRef = useRef(null);\n  const copyRef = useRef(null);\n  const imageRef = useRef(null);\n\n  useEffect(() => {\n    if (compRef.current && contentRef.current && imageRef.current) {\n      document.addEventListener('scroll', () => {\n        const ref = compRef.current;\n        const height = ref.offsetHeight;\n        const scroll = ref.offsetTop - window.scrollY;\n\n        if (scroll < height && scroll > 0) {\n          const percentage = ((height - scroll) / (height * 3)) * 100;\n          contentRef.current.style.transform = `translateX(${-offset +\n            percentage}%)`;\n          imageRef.current.style.opacity = (height - scroll) / (height * 3);\n\n          if (scroll < height / 2) {\n            copyRef.current.style.cssText += `opacity: 1; transform: translateY(0);`;\n          } else {\n            copyRef.current.style.cssText += `opacity: 0; transform: translateY(${offset *\n              2}%);`;\n          }\n        }\n      });\n    }\n  });\n\n  return (\n    <Container>\n      <Wrapper ref={compRef}>\n        <Content ref={contentRef}>\n          <Title as=\"h2\">{title}</Title>\n          <Copy ref={copyRef}>{copy}</Copy>\n        </Content>\n        <ImageWrapper ref={imageRef}>\n          <Image {...image} />\n        </ImageWrapper>\n      </Wrapper>\n    </Container>\n  );\n};\n\nIntro.propTypes = {\n  copy: PropTypes.string.isRequired,\n  image: PropTypes.shape(ImageType).isRequired,\n  setRefs: PropTypes.func,\n  title: PropTypes.string.isRequired\n};\n\nexport default Intro;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Hero, Intro } from '../../components';\nimport { theme } from '../../global';\nimport data from './data';\n\nconst { intro } = data;\n\nconst { color } = theme;\n\nconst Wrapper = styled.div`\n  background-color: ${color.black};\n`;\n\nconst Landing = () => (\n  <Wrapper>\n    <Hero />\n    <Intro {...intro} />\n  </Wrapper>\n);\n\nexport default Landing;\n","export default {\n  intro: {\n    copy:\n      '30 year old musician and developer currently living in Nashville. I enjoy music, traveling and the ocassional face mask night with my wife.',\n    image: {\n      alt: 'Josh in a bathtub with a wine glass',\n      src: '/img/me.jpg'\n    },\n    title: 'Hello, It Me.'\n  }\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { GlobalStyles } from './global';\nimport { Landing } from './pages';\n\nconst App = () => (\n  <Router basename=\"/portfolio\">\n    <>\n      <GlobalStyles />\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n      </Switch>\n    </>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}